services:
  #  customer specific db
  postgres-customer:
    container_name: postgres-customer
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: helk
      PGDATA: /data/postgres
    volumes:
      - postgres-customer:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  #  fraud specific db
  postgres-fraud:
    container_name: postgres-fraud
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: helk
      PGDATA: /data/postgres
    volumes:
      - postgres-fraud:/data/postgres
    ports:
      - "5433:5433"
    command: -p 5433
    networks:
      - postgres
    restart: unless-stopped

  #  notification specific db
  postgres-notification:
    container_name: postgres-notification
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: helk
      PGDATA: /data/postgres
    volumes:
      - postgres-notification:/data/postgres
    ports:
      - "5434:5434"
    command: -p 5434
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  # Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    networks:
      - spring

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      # The port that the microservices will be connecting to
      - "5672:5672"
      # Management port (For the management console)
      - 15672:15672
  eureka-server:
    image: helk0/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
        - SPRING.PROFILES.ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
  apigateway:
    image: helk0/apigateway:latest
    container_name: apigateway
    ports:
      - "8083:8083"
    environment:
      - SPRING.PROFILES.ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eureka-server

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge


volumes:
  postgres-customer:
  postgres-fraud:
  postgres-notification:
  pgadmin:
